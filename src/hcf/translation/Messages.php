<?php

namespace hcf\translation;

use hcf\HCF;
use pocketmine\utils\TextFormat;

interface Messages
{

    public const MESSAGE = [
        "noPermission" => self::RED . "You don't have permission to do this action!",
        "invalidPlayer" => self::RED . "Invalid player!",
        "invalidGroup" => self::RED . "Invalid group!",
        "notNumeric" => self::RED . "The number you've entered isn't a valid number!",
        "addMoneySuccess" => self::GREEN . "You've successfully added {amount} to {name}'s balance.",
        "addLivesSuccess" => self::GREEN . "You've successfully added {amount} lives to {name}.",
        "reviveSuccess" => self::GREEN . "You've successfully revived {name}.",
        "lives" => self::ORANGE . "You now have {amount} lives.",
        "noLives" => self::RED . "You don't have any lives!",
        "subtractMoneySuccess" => self::GREEN . "You've successfully subtract {amount} from {name}'s balance.",
        "setBalanceSuccess" => self::GREEN . "You've successfully set {name}'s balance to {amount}.",
        "setGroupSuccess" => self::GREEN . "You've successfully set {name}'s group to {group}.",
        "balance" => self::GREEN . "{name} balance: {amount}",
        "tagSetSuccess" => self::GREEN . "You've successfully set your tag to {tag}.",
        "tagAddSuccess" => self::GREEN . "You've successfully added a {tag} tag to {name}.",
        "borderReached" => self::RED . "You've reached the border!",
        "actionCooldown" => self::RED . "Slow down! This action is on cooldown for {amount} seconds!",
        "selectItemMakeShop" => self::ORANGE . "Select an item to set what the shop will provide.",
        "sellShopConfirmed" => self::GREEN . "You've sold {amount} {name} for {price}.",
        "buyShopConfirmed" => self::GREEN . "You've bought {amount} {name} for {price}.",
        "notEnoughMoney" => self::RED . "You don't have enough money!",
        "sellItemNotFound" => self::RED . "The item you are selling is not found!",
        "noPermissionCombatTag" => self::RED . "You can't do this action because you are combat tagged!",
        "death" => self::AQUA . "{name} died.",
        "deathByPlayer" => self::AQUA . "{name} was killed by {killer} using {item}.",
        "focus" => self::ORANGE . "You are now focusing {name}.",
        "diamondFound" => self::AQUA . "{name} found {amount} diamonds.",
        "coordsShowChange" => self::GREEN . "You've turned {mode} your coordinates displayer.",
        "broadcastMessage" => self::PURPLE . "{broadcast}",
        "enterSafeZoneInCombat" => self::RED . "You can't enter a safe zone while in combat!",
        "buildNearSpawn" => self::RED . "You may only edit land " . HCF::EDIT . " blocks from spawn.",
        "restartMessage" => self::BLUE . "Server will restart in {hours} hour(s) and {minutes} minutes(s) and {seconds} second(s).",
        "listMessage" => "{count} {group}: {list}",
        "requireCrowbar" => self::RED . "You need a crowbar to remove this!",
        "fullInventory" => self::RED . "Your inventory is too full!",
        "noMoreCrowbarUses" => self::RED . "You don't have any more uses for this block!",
        "isInvincible" => self::RED . "{name} is currently invincible!",
        "attackWhileInvincible" => self::RED . "You can't attack people while invincible!",
        "isNotInvincible" => self::RED . "You currently aren't invincible!",
        "enablePVP" => self::GREEN . "You've successfully enabled PVP.",
        "attackFactionAssociate" => self::RED . "You may not attack a faction associate!",
        "editClaimNotAllowed" => self::RED . "You aren't allowed to edit this claim!",
        "dtrFreeze" => self::RED . "Your faction is now on DTR freeze!",
        "invalidFaction" => self::RED . "Invalid faction!",
        "notInvited" => self::RED . "You were not invited to {faction}!",
        "factionMaxMembers" => self::RED . "{faction} has reached its max amount of members!",
        "factionMaxAllies" => self::RED . "{faction} has reached its max amount of allies!",
        "factionJoin" => self::PURPLE . "{name} has joined the faction.",
        "factionLeave" => self::PURPLE . "{name} has left the faction.",
        "beInFaction" => self::RED . "You must be in a faction to do this!",
        "allyRequest" => self::PURPLE . "{senderFaction} has requested to ally with {faction}.",
        "allyAdd" => self::PURPLE . "Your faction has allied with {faction}.",
        "unally" => self::PURPLE . "Your faction has unallied with {faction}.",
        "promotion" => self::PURPLE . "{name} has been promoted to {position}.",
        "location" => self::PURPLE . "{name}'s current location: {x}, {y}, {z}",
        "chatModeSwitch" => self::GREEN . "Your chat mode has been switched to {mode}.",
        "factionNotEnoughMoney" => self::RED . "Your faction doesn't have enough money!",
        "overrideClaim" => self::RED . "You can't override a claim!",
        "notClaimed" => self::RED . "This area of land is not claimed!",
        "unclaimSuccess" => self::GREEN . "You've successfully unclaimed this part of the land!",
        "claimSuccess" => self::GREEN . "You've successfully claimed this part of land!",
        "inviteSentSender" => self::GREEN . "You've invited {name} to the faction!",
        "inviteSentPlayer" => self::GREEN . "You've been invited to {faction}!",
        "factionNameTooLong" => self::RED . "The selected faction name is too long!",
        "existingFaction" => self::RED . "{faction} is an existing faction!",
        "factionCreate" => self::AQUA . "{faction} faction was recently created by {name}.",
        "notFactionMember" => self::RED . "{name} is not one of your faction members!",
        "cannotPromote" => self::RED . "{name} can not be promoted!",
        "promoted" => self::PURPLE . "{name} has been promoted by {sender}.",
        "cannotDemote" => self::RED . "{name} can not be demoted!",
        "demoted" => self::PURPLE . "{name} has been demoted by {sender}.",
        "deposit" => self::PURPLE . "{name} has deposited {amount}.",
        "withdraw" => self::PURPLE . "{name} has withdrew {amount}.",
        "homeSet" => self::GREEN . "Faction home has been set!",
        "disband" => self::AQUA . "{faction} faction was recently disbanded.",
        "teleportHomeInClaim" => self::RED . "You can't use /f home in another faction's claim!",
        "homeNotSet" => self::RED . "Your faction home is not set!",
        "mustLeaveFaction" => self::RED . "You must leave your faction to do this!",
        "banMessage" => TextFormat::RED . "You have been banned by {name} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\". Expiration: {time}" . TextFormat::RED . ".",
        "kickMessage" => TextFormat::RED . "You have been kicked by {name} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\".",
        "muteMessage" => TextFormat::RED . "You have been muted by {name} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\". Expiration: {time}" . TextFormat::RED . ".",
        "banBroadcast" => self::RED . TextFormat::RED . "{name} " . TextFormat::RED . "has been banned by {effector} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\". Expiration: {time}" . TextFormat::RED . ".",
        "muteBroadcast" => self::RED . TextFormat::RED . "{name} " . TextFormat::RED . "has been muted by {effector} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\". Expiration: {time}" . TextFormat::RED . ".",
        "kickBroadcast" => self::RED . TextFormat::RED . "{name} " . TextFormat::RED . "has been kicked by {effector} " . TextFormat::RED . "for \"{reason}" . TextFormat::RED . "\".",
        "punishmentRelivedBroadcast" => self::GREEN . TextFormat::GREEN . "{name}" . TextFormat::GREEN . "'s punishment has been relieved by {effector}" . TextFormat::GREEN . "!",
        "usageMessage" => self::ORANGE . "Usage: {usage}",
        "addPermission" => self::GREEN . "You have successfully added permission \"{permission}\" to {name}.",
        "kitCooldown" => self::RED . "This kit is on cooldown for {time}!",
        "visibilityChange" => self::ORANGE . "You are now {mode}.",
        "errorOccurred" => self::RED . "An error had occurred in this process!",
        "alreadyVoted" => self::RED . "You have already claimed your vote!",
        "haveNotVoted" => self::RED . "You have not voted yet! Vote at https://bit.ly/37kt2CS!",
        "voteBroadcast" => self::AQUA . "{name} has voted for our server at https://bit.ly/37kt2CS and received a reward!",
        "checkingVote" => self::RED . "You already have a processing vote check!",
        "claimNextToYourClaim" => self::RED . "You can only claim next to one of your existing claims!",
        "mustBeInClaim" => self::RED . "You must be in your claim to do this action!",
        "animationAlreadyRunning" => self::RED . "There's already an animation running!",
        "noKeys" => self::RED . "You don't have any keys for this crate!",
        "invalidCrate" => self::RED . "Invalid crate type!",
        "placeBeaconInClaim" => self::RED . "You can only place a beacon in your claim!",
        "claimPositionSet" => self::GREEN . "You've successfully the claim's {place} position!",
        "claimConfirm" => self::GREEN . "You've selected {amount} blocks. Your price is {price}. Sneak and tap anywhere to confirm purchase of claim.",
        "claimTooSmall" => self::RED . "The claim you selected must be more than 5x5!",
        "mustUnclaimCurrentClaim" => self::RED . "You already have an existing claim! You must unclaim your current claim!",
        "reclaim" => self::AQUA . "{name} has reclaimed their {rank} package!",
        "alreadyReclaimed" => self::RED . "You have already reclaimed yours seasonal rewards!",
        "mustSelectClaim" => self::RED . "You must select your first position and your second position with a claiming stick!",
        "frozen" => self::RED . "{name} frozen currently!",
        "freezePlayer" => self::RED . "You have been frozen! If you leave, that means you will be admitting to hacking causing a 7 day ban!",
        "freezeSender" => self::GREEN . "You've successfully frozen {player}.",
        "unfreezePlayer" => self::GREEN . "You have been unfrozen.",
        "unfreezeSender" => self::GREEN . "You've successfully unfrozen {player}.",
        "godAppleCooldown" => self::RED . "You may not eat a god apple for {time}!",
        "couldNotFindSafeLocation" => self::RED . "Unable to find a safe location!",
        "shiftToNotTeleport" => self::RED . "Sneak to prevent from teleporting!",
        "keyAll" => self::BLUE . "{name} gave everyone online {amount} {type} crate key(s)!",
        "kothBegin" => self::BLUE . "A KOTH game has begun using the {name} point!",
        "kothEnd" => self::BLUE . "{player} has won the KOTH game at {name} point!",
        "kothCurrentCapturer" => self::BLUE . "{player} is now capturing {name} point!",
        "maxWayPoints" => self::RED . "You've reached the max amount of way points! Please delete some to create me!",
        "existingWayPoint" => self::RED . "{name} is an existing way point!",
        "nonExistingWayPoint" => self::RED . "{name} is a non-existing way point!",
        "createWayPoint" => self::GREEN . "You've successfully created way point \"{name}\".",
        "deleteWayPoint" => self::GREEN . "You've successfully deleted way point \"{name}\".",
        "wayPointNameTooLong" => self::RED . "Your way point name exceeds the character limit!",
        "toggleWayPoint" => self::GREEN . "You've successfully toggled the visibility of way points.",
        "noFaction" => self::RED . "{name} doesn't have a faction!",
        "invalidPage" => self::RED . "Invalid page!",
        "mayNotEnterWhilePvpTimerOn" => self::RED . "You may not enter here while your pvp timer is active!",
        "claimOnceReachEdit" => self::RED . "You can only claim when you are " . HCF::EDIT . " blocks from spawn!",
    ];

    public const RED = TextFormat::BOLD . TextFormat::DARK_RED . "[" . TextFormat::RED . "KingsHCF" . TextFormat::DARK_RED . "] " . TextFormat::RESET . TextFormat::GRAY;
    public const ORANGE = TextFormat::BOLD . TextFormat::GOLD . "[" . TextFormat::YELLOW . "KingsHCF" . TextFormat::GOLD . "] " . TextFormat::RESET . TextFormat::GRAY;
    public const GREEN = TextFormat::BOLD . TextFormat::DARK_GREEN . "[" . TextFormat::GREEN . "KingsHCF" . TextFormat::DARK_GREEN . "] " . TextFormat::RESET . TextFormat::GRAY;
    public const AQUA = TextFormat::BOLD . TextFormat::DARK_AQUA . "[" . TextFormat::AQUA . "KingsHCF" . TextFormat::DARK_AQUA . "] " . TextFormat::RESET . TextFormat::GRAY;
    public const PURPLE = TextFormat::BOLD . TextFormat::DARK_PURPLE . "[" . TextFormat::LIGHT_PURPLE . "KingsHCF" . TextFormat::DARK_PURPLE . "] " . TextFormat::RESET . TextFormat::GRAY;
    public const BLUE = TextFormat::BOLD . TextFormat::DARK_BLUE . "[" . TextFormat::BLUE . "KingsHCF" . TextFormat::DARK_BLUE . "] " . TextFormat::RESET . TextFormat::GRAY;
}